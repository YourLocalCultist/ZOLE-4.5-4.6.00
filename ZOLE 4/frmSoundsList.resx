<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>4D  Puzzle Solved
4E  Enemy Damaged
4F  Sword Charge
50  Metal Ding (Shovel)
51  Throw Item (Link)
52  Knock Enemy with Shield
55  Exit Pause Menu
56  Selecting Something on Pause Menu
57  Picked up Heart
58  Sword Against Bombable Wall
59  Enemy Falling
5A  Wrong
5B  4D, but Longer
5C  Switch Seasons
5D  Sword Beam
5E  Pick Up Supply
5F  Link Hurt
60  Low Hearts
61  Picked Up Rupee
62  Picked Up Heart (LA)
63  Damaged Boss
64  Link Died
65  Link Fell
66  Letter Typed in Text
67  Boss Defeated
68  ???
69  ???
6A  Enemy Damaged (LA)
6B  Spin Attack
6C  Chest Opened
6D  Chopped Grass
6E  Downstairs / Into Cave / etc.
6F  Bomb Explosion
70  Bridge Creation
71  Pushed Block / Pot
72  Dropped Ember Seed / Lit Torch
73  Enemy Defeated
74  Sword Swing
75  Sword Swing 2
76  ???
77  Key Hit Ground
78  Sword Swing 3
79  Boss Exploded
7A  Nothing
7B  Dropped Mystery Seed
7C  Boss Footsteps (Endless)
7D  Minecart Gate Open
7E  Color Block Push
7F  Color Block Push 2</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>80  Minecart Moving
81  Minecart Going Through Door
82  Minecart Door Closing
83  Magic Powder
84  Moving Cursor in Pause Menu
85  Pegasus Boots into Wall (LA)
87  Shallow Water Step / Button Pressed
88  Swimming Dash (A Button in Water)
89  Advance Text (A Button Press in Text)
8A  Picked up Piece of Power / Guardian Acorn (LA)
8B  That little jingle the text makes to indicate
    Link got 4 pieces of heart.
8C  ???
8D  Time Warping (Sound as Screen Turns White)
8E  Switch Hook Swap
8F  Enemy Jumping
90  Gale Seed Dropped
91  Big Healing Fairy Disappeared
95  Room Defuzzing on New Game
96  Ghost Following Link after Transition (LA)
98  Puff Sound
99  ???
9A  ???
9B  Compass Key Jingle, but Lower Octave
9C  Lifting Object (Link)
9D  Ricky's Flute
9E  Dimitri's Flute
9F  Moosh's Flute
A0  The sound that rooster makes when lifting
    Link on that cliff in OoS.
A1  ???
A2  Compass Key Jingle
A3  Land After Using Feather
A4  Beamos Shot
A5  Something Shatters, Like a Crystal or Pot
A6  Sword Swing (LA)
A7  ???
A8  ???
A9  Dig
AA  Ocean, Water Moving
AB  That little swing that Link does when
    he first gets the sword.
AC  Electrocuted by Buzz Blob
AD  Tube of Echoes
AE  Tune of Currents
AF  Tune of Ages</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>B0  Earthquake, Screen Shaking
B1  BigGorin Sword Swing
B2  Earthquake (Bit Shorter than B0,
    Different Sound at End)
B3  Earthquake (Shortest, About a Second)
B4  Warping Out of Dungeon after Essence Get
B5  Tingle Noise (Tingle-Tingle-Kooloo-Limpah!)
B6  Tokay
B8  Earthquake (About 3 Seconds)
B9  B4, but Endless
BA  Boss Footsteps
BB  ???
BC  Something Massive Getting Destroyed
BE  ???
BF  Another Tingle Sound
C0  ???
C1  ???
C2  Water Flowing In / Out of Level 7
C3  Ricky Sound
C4  ???
C5  ???
C6  Deku Scrub Before Text Comes Up
C7  ???
C8  End of Minigame
C9  ???
CB  Seed Shooter
CC  Minigame Whistle
CD  Goron Dance Sound
CE  Another Tingle Noise
D0  Scent Seed Dropped
D1  Full Time Warp Sound
D2  ???
D3  ???
D4  Time Warp (First Sound)</value>
  </data>
</root>